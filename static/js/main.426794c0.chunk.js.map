{"version":3,"sources":["components/Waypoint/dragIcon.svg","components/Waypoint/deleteIcon.svg","utils/reorderList.js","utils/deleteItemFromList.js","Redux/reducers/RouteReducer.js","Redux/reducers/index.js","Redux/constants/index.js","store.js","utils/coordinates.js","components/GoogleMap/MapContext.js","components/GoogleMap/useGoogleMap.js","components/GoogleMap/Map.js","components/GoogleMap/Marker.js","components/GoogleMap/PolyLine.js","components/Map/Route.js","components/Map/Map.js","components/DraggableList/DraggableList.js","components/Waypoint/Waypoint.js","components/RouteControl/RouteControl.js","utils/createBLOB.js","components/GPX/elements.js","components/GPX/GPXRoute.js","components/GPX/renderGPX.js","components/Download/Download.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","reorderList","startIndex","endIndex","list","result","splice","removed","deleteItemFromList","id","filter","item","initialState","coordinates","rootReducer","combineReducers","route","state","action","type","payload","source","destination","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","serializeCoordinates","lat","lng","uniqueId","parseCoordinates","map","MapContext","React","createContext","useGoogleMap","onSuccess","useEffect","isSubscribed","loadGoogleMaps","key","process","then","api","catch","error","console","MapContainer","center","zoom","onClick","children","className","mapNode","useRef","contextStorage","useState","isLoading","setIsLoading","isMapReady","setIsMapReady","useCallback","googleAPI","current","mapInstance","Map","addListener","e","latLng","event","clearListeners","ref","Provider","value","Marker","position","useContext","marker","title","setMap","PolyLine","polylineOptions","polyLine","Polyline","path","getPath","forEach","coordinate","push","Route","useSelector","strokeColor","strokeOpacity","strokeWeight","area51","dispatch","useDispatch","handleClick","polyLineOptions","DraggableList","items","onReorder","ListItem","listItem","onDragEnd","index","droppableId","provided","snapshot","droppableProps","innerRef","style","isDraggingOver","padding","width","boxSizing","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","background","placeholder","defaultProps","Waypoint","onDelete","src","dragIcon","alt","tabIndex","role","deleteIcon","RouteControl","handleReorder","handleDelete","props","createBlob","string","Blob","GPX","createElement","RoutePoint","GPXRoute","version","creator","name","renderGPX","gpx","ReactDomServer","renderToStaticMarkup","Download","hasRoute","length","disabled","GPXString","saveAs","createBLOB","Dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.426794c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dragIcon.62cd9b58.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteIcon.7cfdc2fe.svg\";","const reorderList = (startIndex, endIndex, list) => {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1); // eslint-disable-line fp/no-mutating-methods\n  result.splice(endIndex, 0, removed); // eslint-disable-line fp/no-mutating-methods\n  return result;\n};\n\nexport default reorderList;\n","const deleteItemFromList = (id, list) => list.filter(item => item.id !== id);\n\nexport default deleteItemFromList;\n","import {\n  ADD_COORDINATES,\n  REORDER_COORDINATES,\n  DELETE_COORDINATES,\n} from 'Redux/constants';\nimport reorderList from 'utils/reorderList';\nimport deleteItemFromList from 'utils/deleteItemFromList';\n\nconst initialState = {\n  coordinates: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COORDINATES:\n      return {\n        ...state,\n        coordinates: [...state.coordinates, action.payload],\n      };\n    case REORDER_COORDINATES:\n      return {\n        ...state,\n        coordinates: reorderList(\n          action.payload.source,\n          action.payload.destination,\n          state.coordinates\n        ),\n      };\n    case DELETE_COORDINATES:\n      return {\n        ...state,\n        coordinates: deleteItemFromList(action.payload, state.coordinates),\n      };\n    default: {\n      return state;\n    }\n  }\n};\n","import {combineReducers} from 'redux';\nimport RouteReducer from 'Redux/reducers/RouteReducer';\n\nconst rootReducer = combineReducers({\n  route: RouteReducer,\n});\n\nexport default rootReducer;\n","export const ADD_COORDINATES = 'ADD_COORDINATES';\nexport const REORDER_COORDINATES = 'REORDER_COORDINATES';\nexport const DELETE_COORDINATES = 'DELETE_COORDINATES';\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './Redux/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(ReduxThunk))\n);\n\nexport default store;\n","import {uniqueId} from 'lodash';\n\nexport const serializeCoordinates = ({lat, lng}) => ({\n  lat: lat(),\n  lng: lng(),\n  id: uniqueId('point-'),\n});\n\nexport const parseCoordinates = coordinates =>\n  coordinates.map(({lat, lng}) => ({\n    lat: () => lat,\n    lng: () => lng,\n  }));\n","import React from 'react';\n\nconst MapContext = React.createContext({});\n\nexport default MapContext;\n","import {useEffect} from 'react';\nimport loadGoogleMaps from 'load-google-maps-api';\n\nconst useGoogleMap = onSuccess => {\n  useEffect(() => {\n    let isSubscribed = true; // eslint-disable-line fp/no-let\n    loadGoogleMaps({\n      key: process.env.REACT_APP_GOOGLE_API_KEY,\n    })\n      .then(api => {\n        isSubscribed && onSuccess(api);\n      })\n      .catch(error => {\n        isSubscribed && console.error(error); // eslint-disable-line no-console\n      });\n    return () => {\n      isSubscribed = false;\n    };\n  }, [onSuccess]);\n};\n\nexport default useGoogleMap;\n","import React, {useRef, useState, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './MapContext';\nimport useGoogleMap from './useGoogleMap';\n\nconst MapContainer = ({center, zoom, onClick, children, className}) => {\n  const mapNode = useRef();\n  const contextStorage = useRef();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMapReady, setIsMapReady] = useState(false);\n  const onSuccess = useCallback(\n    googleAPI => {\n      const handleClick = e => {\n        onClick(e.latLng);\n      };\n      setIsLoading(false);\n      contextStorage.current = {\n        googleAPI,\n        mapInstance: new googleAPI.Map(mapNode.current, {zoom, center}),\n      };\n      contextStorage.current.mapInstance.addListener('click', handleClick);\n      setIsMapReady(true);\n      return () => {\n        // We can't destroy map instance, so we are just removing event listeners\n        contextStorage.current.googleAPI.event.clearListeners(\n          contextStorage.current.mapInstance,\n          'click'\n        );\n      };\n    },\n    [center, zoom, onClick]\n  );\n\n  useGoogleMap(onSuccess);\n\n  return isLoading ? (\n    <div>Loading...</div>\n  ) : (\n    <div className={className} ref={mapNode}>\n      {isMapReady && (\n        <MapContext.Provider value={contextStorage.current}>\n          {children}\n        </MapContext.Provider>\n      )}\n    </div>\n  );\n};\n\nMapContainer.propTypes = {\n  center: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n  }).isRequired,\n  polyLineOptions: PropTypes.shape({\n    strokeColor: PropTypes.string.isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWeight: PropTypes.number.isRequired,\n  }).isRequired,\n  zoom: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  className: PropTypes.string.isRequired,\n};\n\nexport default MapContainer;\n","import React, {useRef, useContext, useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './MapContext';\n\nconst Marker = ({position}) => {\n  const {googleAPI, mapInstance} = useContext(MapContext);\n  const marker = useRef();\n  useEffect(() => {\n    marker.current = new googleAPI.Marker({\n      position,\n      title: '#',\n      map: mapInstance,\n    });\n    return () => {\n      marker.current.setMap(null);\n    };\n  }, [googleAPI, mapInstance, position]);\n\n  return <Fragment />;\n};\n\nMarker.propTypes = {\n  position: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Marker;\n","import React, {Fragment, useRef, useContext, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './MapContext';\n\nconst PolyLine = ({polylineOptions, coordinates}) => {\n  const {googleAPI, mapInstance} = useContext(MapContext);\n  const polyLine = useRef();\n  useEffect(() => {\n    polyLine.current = new googleAPI.Polyline(polylineOptions);\n    polyLine.current.setMap(mapInstance);\n    const path = polyLine.current.getPath();\n    coordinates.forEach(coordinate => {\n      path.push(coordinate); // eslint-disable-line fp/no-mutating-methods\n    });\n    return () => {\n      polyLine.current.setMap(null);\n    };\n  }, [googleAPI, mapInstance, coordinates, polylineOptions]);\n\n  return <Fragment />;\n};\n\nPolyLine.propTypes = {\n  polylineOptions: PropTypes.shape({\n    strokeColor: PropTypes.string.isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWeight: PropTypes.number.isRequired,\n  }).isRequired,\n  coordinates: PropTypes.arrayOf(\n    PropTypes.shape({\n      lat: PropTypes.func.isRequired,\n      lng: PropTypes.func.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default PolyLine;\n","import React, {Fragment} from 'react';\nimport {useSelector} from 'react-redux';\nimport {parseCoordinates} from 'utils/coordinates';\nimport {Marker, PolyLine} from 'components/GoogleMap';\n\nconst Route = () => {\n  const coordinates = useSelector(state => state.route.coordinates);\n  return (\n    <Fragment>\n      {coordinates.map(coordinate => (\n        <Marker position={coordinate} key={coordinate.id} />\n      ))}\n      <PolyLine\n        coordinates={parseCoordinates(coordinates)}\n        polylineOptions={{\n          strokeColor: '#000000',\n          strokeOpacity: 1.0,\n          strokeWeight: 3,\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Route;\n","import React, {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {ADD_COORDINATES} from 'Redux/constants';\nimport {serializeCoordinates} from 'utils/coordinates';\nimport {GoogleMap} from 'components/GoogleMap';\nimport Route from 'components/Map/Route';\nimport './Map.scss';\n\nconst area51 = {\n  lat: 37.234332396,\n  lng: -115.80666344,\n};\n\nconst Map = () => {\n  const dispatch = useDispatch();\n  const handleClick = useCallback(\n    coordinates =>\n      dispatch({\n        type: ADD_COORDINATES,\n        payload: serializeCoordinates(coordinates),\n      }),\n    [dispatch]\n  );\n\n  return (\n    <div className=\"map\">\n      <GoogleMap\n        className=\"map-container\"\n        onClick={handleClick}\n        center={area51}\n        polyLineOptions={{\n          strokeColor: '#000000',\n          strokeOpacity: 1.0,\n          strokeWeight: 3,\n        }}\n        zoom={9}>\n        <Route />\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: `${grid * 2} 0`,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? 'rgb(195, 228, 82)' : '',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = () => ({\n  padding: grid,\n  width: '100%',\n  boxSizing: 'border-box',\n});\n\nconst DraggableList = ({items, onReorder, listItem}) => {\n  const ListItem = listItem;\n  const onDragEnd = result => {\n    if (result.destination) {\n      onReorder(result.source.index, result.destination.index);\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(provided, snapshot) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}>\n            {items.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}>\n                    <ListItem index={index} item={item} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nDraggableList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onReorder: PropTypes.func.isRequired,\n  listItem: PropTypes.elementType.isRequired,\n};\n\nDraggableList.defaultProps = {\n  items: [],\n};\n\nexport default DraggableList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dragIcon from './dragIcon.svg';\nimport deleteIcon from './deleteIcon.svg';\nimport './Waypoint.scss';\n\nconst Waypoint = ({index, item, onDelete}) => {\n  const handleClick = () => {\n    onDelete(item.id);\n  };\n  return (\n    <div className=\"waypoint\">\n      <div className=\"waypoint-dragHandle\">\n        <i className=\"waypoint-icon\">\n          <img src={dragIcon} alt=\"drag\" />\n        </i>\n      </div>\n      <div className=\"waypoint-name\">Waypoint {index + 1}</div>\n      <div className=\"waypoint-actions\">\n        <i\n          tabIndex={0}\n          role=\"button\"\n          className=\"waypoint-icon\"\n          onClick={handleClick}>\n          <img src={deleteIcon} alt=\"delete\" />\n        </i>\n      </div>\n    </div>\n  );\n};\n\nWaypoint.propTypes = {\n  index: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Waypoint;\n","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {REORDER_COORDINATES, DELETE_COORDINATES} from 'Redux/constants';\nimport DraggableList from 'components/DraggableList';\nimport Waypoint from 'components/Waypoint';\nimport './RouteControl.scss';\n\nconst RouteControl = () => {\n  const coordinates = useSelector(state => state.route.coordinates);\n  const dispatch = useDispatch();\n  const handleReorder = useCallback(\n    (source, destination) => {\n      dispatch({\n        type: REORDER_COORDINATES,\n        payload: {source, destination},\n      });\n    },\n    [dispatch]\n  );\n  const handleDelete = useCallback(\n    id => {\n      dispatch({\n        type: DELETE_COORDINATES,\n        payload: id,\n      });\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"route-control\">\n      <DraggableList\n        listItem={props => <Waypoint {...props} onDelete={handleDelete} />}\n        onReorder={handleReorder}\n        items={coordinates}\n      />\n    </div>\n  );\n};\n\nexport default RouteControl;\n","const createBlob = string =>\n  new Blob([string], {type: 'text/xml;charset=utf-8'});\n\nexport default createBlob;\n","import React from 'react';\n\nexport const GPX = props => React.createElement('gpx', props);\nexport const Route = props => React.createElement('rte', props);\nexport const RoutePoint = props => React.createElement('rtept', props);\nexport const Elevation = props => React.createElement('ele', props);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {GPX, Route, RoutePoint} from './elements';\n\nconst GPXRoute = ({coordinates}) => (\n  <GPX version=\"1.1\" creator=\"route-planner\">\n    <Route name=\"Your route\">\n      {coordinates.map(({lat, lng, id}) => (\n        <RoutePoint lat={lat} lng={lng} key={id} />\n      ))}\n    </Route>\n  </GPX>\n);\n\nGPXRoute.propTypes = {\n  coordinates: PropTypes.arrayOf(\n    PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      lng: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default GPXRoute;\n","import React from 'react';\nimport ReactDomServer from 'react-dom/server';\nimport GPXRoute from './GPXRoute';\n\nconst renderGPX = coordinates => {\n  const gpx = ReactDomServer.renderToStaticMarkup(\n    <GPXRoute coordinates={coordinates} />\n  );\n  return `<?xml version=\"1.0\"?>\\n${gpx}`;\n};\n\nexport default renderGPX;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {saveAs} from 'file-saver';\nimport createBLOB from 'utils/createBLOB';\nimport renderGPX from 'components/GPX';\nimport './Download.scss';\n\nconst Download = () => {\n  const coordinates = useSelector(state => state.route.coordinates);\n  const hasRoute = coordinates.length !== 0;\n  const handleClick = () => {\n    if (hasRoute) {\n      const GPXString = renderGPX(coordinates);\n      saveAs(createBLOB(GPXString), 'route.gpx');\n    }\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        disabled={!hasRoute}\n        onClick={handleClick}\n        className=\"download-button\">\n        Download your Route\n      </button>\n    </div>\n  );\n};\n\nexport default Download;\n","import React from 'react';\nimport RouteControl from 'components/RouteControl';\nimport Download from 'components/Download';\nimport './Dashboard.scss';\n\nconst Dashboard = props => (\n  <div className=\"dashboard\">\n    <h3>Route Builder</h3>\n    <div className=\"routecontrol-wrapper\">\n      <RouteControl />\n    </div>\n    <div className=\"download-wrapper\">\n      <Download />\n    </div>\n  </div>\n);\n\nexport default Dashboard;\n","import React from 'react';\nimport Map from 'components/Map';\nimport Dashboard from 'components/Dashboard';\n\nconst App = props => (\n  <div className=\"App\">\n    <Dashboard />\n    <Map />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from 'store';\nimport App from 'App';\nimport 'index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}